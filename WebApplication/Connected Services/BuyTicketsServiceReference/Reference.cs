//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.BuyTicketsServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BuyTicketsServiceReference.BuyTicketsWebServiceSoap")]
    public interface BuyTicketsWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ViewEvent(string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewEvent", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ViewEventAsync(string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculateTotalPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        decimal CalculateTotalPrice(string eventId, int ticketCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculateTotalPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<decimal> CalculateTotalPriceAsync(string eventId, int ticketCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurchaseTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchaseTickets(string eventId, int ticketCount, string userEmail, decimal totalPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PurchaseTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PurchaseTicketsAsync(string eventId, int ticketCount, string userEmail, decimal totalPrice);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BuyTicketsWebServiceSoapChannel : WebApplication1.BuyTicketsServiceReference.BuyTicketsWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuyTicketsWebServiceSoapClient : System.ServiceModel.ClientBase<WebApplication1.BuyTicketsServiceReference.BuyTicketsWebServiceSoap>, WebApplication1.BuyTicketsServiceReference.BuyTicketsWebServiceSoap {
        
        public BuyTicketsWebServiceSoapClient() {
        }
        
        public BuyTicketsWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BuyTicketsWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuyTicketsWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuyTicketsWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ViewEvent(string eventId) {
            return base.Channel.ViewEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ViewEventAsync(string eventId) {
            return base.Channel.ViewEventAsync(eventId);
        }
        
        public decimal CalculateTotalPrice(string eventId, int ticketCount) {
            return base.Channel.CalculateTotalPrice(eventId, ticketCount);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateTotalPriceAsync(string eventId, int ticketCount) {
            return base.Channel.CalculateTotalPriceAsync(eventId, ticketCount);
        }
        
        public string PurchaseTickets(string eventId, int ticketCount, string userEmail, decimal totalPrice) {
            return base.Channel.PurchaseTickets(eventId, ticketCount, userEmail, totalPrice);
        }
        
        public System.Threading.Tasks.Task<string> PurchaseTicketsAsync(string eventId, int ticketCount, string userEmail, decimal totalPrice) {
            return base.Channel.PurchaseTicketsAsync(eventId, ticketCount, userEmail, totalPrice);
        }
    }
}
